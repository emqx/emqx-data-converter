name: Release

on:
  push:
    tags:
      - "**"
  workflow_dispatch:
    inputs:
      ref:
        required: false

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      BUILDER_VSN: ${{ steps.env_setup.outputs.EMQX_BUILDER_VSN }}
      OTP_VSN: ${{ steps.env_setup.outputs.EMQX_OTP_VSN }}
      ELIXIR_VSN: ${{ steps.env_setup.outputs.ELIXIR_VSN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.event.inputs.ref }}
      - name: Set up environment
        id: env_setup
        run: |
          source test/scripts/env.sh
          echo "EMQX_BUILDER_VSN=$EMQX_BUILDER_VSN" | tee -a "$GITHUB_OUTPUT"
          echo "EMQX_OTP_VSN=$EMQX_OTP_VSN" | tee -a "$GITHUB_OUTPUT"
          echo "ELIXIR_VSN=$ELIXIR_VSN" | tee -a "$GITHUB_OUTPUT"

  build:
    runs-on: ubuntu-latest
    container: ghcr.io/emqx/emqx-builder/${{ needs.init.outputs.BUILDER_VSN }}:${{ needs.init.outputs.ELIXIR_VSN }}-${{ needs.init.outputs.OTP_VSN }}-${{ matrix.os }}
    needs:
      - init
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu24.04
          - ubuntu22.04
          - ubuntu20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.event.inputs.ref }}
      - name: build
        run: |
          ./package
      - uses: actions/upload-artifact@v4.3.5
        with:
          name: emqx-data-converter-${{ matrix.os }}
          path: emqx-data-converter*.tar.gz
          retention-days: 14
          if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    needs:
      - init
      - build
    steps:
      - uses: actions/download-artifact@v4.1.8
        with:
          pattern: "emqx-data-converter-*"
          path: packages
          merge-multiple: true
      - name: Create Release
        uses: softprops/action-gh-release@v2.0.8
        with:
          name: emqx-data-converter ${{ github.ref_name }}
          body: emqx-data-converter ${{ github.ref_name }}
          files: packages/*
          draft: ${{ github.ref_type != 'tag' }}
          prerelease: ${{ github.ref_type != 'tag' }}
